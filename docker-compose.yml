version: '3.7'
services:
    postgres:
        image: postgres:9.6
        environment:
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
        logging:
            options:
                max-size: 10m
                max-file: "3"

    webserver:
        build: docker/airflow/
        image: tweets_airflow
        restart: always
        depends_on:
            - postgres        
        environment:
            - LOAD_EX=n
            - EXECUTOR=Local
        logging:
            options:
                max-size: 10m
                max-file: "3"
        ports:
            - "8090:8080"
        command: webserver
        healthcheck:
            test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
            interval: 30s
            timeout: 30s
            retries: 3

    superset:
        container_name: superset
        build: docker/superset/
        image: tweets_superset
        restart: on-failure
        ports:
            - "8088:8088"
            
    spark:
        build: docker/spark/
        image: tweets_spark_master
        environment:
            - SPARK_MODE=master
            - SPARK_RPC_AUTHENTICATION_ENABLED=no
            - SPARK_RPC_ENCRYPTION_ENABLED=no
            - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
            - SPARK_SSL_ENABLED=no
        ports:
            - "8080:8080"
            - "7077:7077"
    spark-worker:
        build: docker/spark/
        image: tweets_spark_worker
        depends_on:
            - spark
        environment:
            - SPARK_MODE=worker
            - SPARK_MASTER_URL=spark://spark:7077
            - SPARK_WORKER_MEMORY=1G
            - SPARK_WORKER_CORES=1
            - SPARK_RPC_AUTHENTICATION_ENABLED=no
            - SPARK_RPC_ENCRYPTION_ENABLED=no
            - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
            - SPARK_SSL_ENABLED=no

    hadoop:
        build: docker/hadoop/
        image: tweets_hadoop
        ports:
            - "50010:50010"
            - "50020:50020"
            - "50070:50070"
            - "50075:50075"
            - "50090:50090"
            - "8089:8088"
            - "8020:8020"
            - "9000:9000"